
character.c,148
char *print_character(print_character9,117
void character_delete(20,300
int32_t compare_characters_by_next_turn(35,525
uint32_t can_see(46,923

character.h,428
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;8,84
typedef struct npc npc_t;9,118
typedef struct pc pc_t;10,144
typedef struct dice_t dice_t;11,168
typedef struct character 13,199
  char symbol;14,226
  pair_t position;15,241
  int32_t speed;16,260
  uint32_t next_turn;17,277
  uint32_t alive;18,299
  uint32_t sequence_number;26,822
  npc_t *npc;npc27,850
  pc_t *pc;pc28,864
} character_t;29,876

dims.h,146
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int8_t pair_t[pair_t13,248

dungeon.c,1171
#define RED 12,180
#define GREEN 13,207
#define YELLOW 14,234
#define BLUE 15,261
#define MAGENTA 16,288
#define CYAN 17,315
#define RESET 18,342
#define LIGHTBLUE 19,368
typedef struct corridor_path 21,400
  heap_node_t *hn;hn22,431
  uint8_t pos[pos23,450
  uint8_t from[from24,468
  int32_t cost;27,616
} corridor_path_t;28,632
static int32_t corridor_path_cmp(30,652
static void dijkstra_corridor(36,915
static int connect_two_rooms(142,5318
static int connect_rooms(160,5969
static int empty_dungeon(171,6142
static int place_rooms(191,6568
static int make_rooms(228,7755
int gen_dungeon(254,8409
void render_dungeon(280,8781
static char distance_to_char[distance_to_char314,9547
void render_distance_map(379,10019
void render_tunnel_distance_map(415,10936
void delete_dungeon(455,12005
void init_dungeon(462,12142
static int write_dungeon_map(470,12330
static int write_rooms(483,12574
static uint32_t calculate_dungeon_size(498,12943
int write_dungeon(505,13184
static int read_dungeon_map(557,14410
static int read_rooms(583,15125
static int calculate_num_rooms(609,15845
int read_dungeon(617,16104
int read_pgm(692,17799

dungeon.h,1457
# define DUNGEON_H2,18
#define DUNGEON_X 11,143
#define DUNGEON_Y 12,177
#define MIN_ROOMS 13,211
#define MAX_ROOMS 14,244
#define ROOM_MIN_X 15,277
#define ROOM_MIN_Y 16,310
#define ROOM_MAX_X 17,343
#define ROOM_MAX_Y 18,377
#define VISUAL_RANGE 19,410
#define PC_SPEED 20,444
#define SAVE_DIR 21,478
#define DUNGEON_SAVE_FILE 22,519
#define DUNGEON_SAVE_SEMANTIC 23,560
#define DUNGEON_SAVE_VERSION 24,600
#define mappair(26,635
#define mapxy(27,692
#define hardnesspair(28,727
#define hardnessxy(29,794
#define charpair(30,839
#define charxy(31,903
typedef enum __attribute__ ((__packed__)) terrain_type 33,946
  ter_debug,34,1003
  ter_wall,35,1016
  ter_wall_immutable,36,1028
  ter_floor,37,1050
  ter_floor_room,38,1063
  ter_floor_hall,39,1081
} terrain_type_t;40,1099
typedef struct room 42,1118
  pair_t position;43,1140
  pair_t size;44,1159
  uint32_t connected;45,1174
} room_t;46,1196
typedef struct character character_t;48,1207
typedef struct dungeon 50,1246
  uint32_t num_rooms;51,1271
  room_t *rooms;rooms52,1293
  terrain_type_t map[map53,1310
  uint8_t hardness[hardness62,1963
  uint8_t pc_distance[pc_distance63,2005
  uint8_t pc_tunnel[pc_tunnel64,2050
  character_t *character[character65,2093
  character_t pc;66,2141
  heap_t next_turn;67,2159
  uint16_t num_monsters;68,2179
  uint16_t max_monsters;69,2204
  uint32_t character_sequence_number;70,2229
} dungeon_t;71,2267

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,160
void do_combat(16,231
void move_character(24,369
void do_moves(40,850
void dir_nearest_wall(88,2038
uint32_t in_corner(100,2453
uint32_t move_pc(118,3081

move.h,104
# define MOVE_H2,15
typedef struct dungeon dungeon_t;8,74
typedef struct character character_t;9,108

npc.c,1038
void npc_delete(10,138
void gen_monsters(17,197
void npc_next_pos_rand_tunnel(59,1501
    uint32_t i;63,1598
    uint8_t a[a64,1614
void npc_next_pos_rand(104,2360
    uint32_t i;108,2450
    uint8_t a[a109,2466
void npc_next_pos_line_of_sight(136,2925
void npc_next_pos_line_of_sight_tunnel(160,3625
void npc_next_pos_gradient(195,4444
static void npc_next_pos_00(318,9136
static void npc_next_pos_01(330,9533
static void npc_next_pos_02(348,10158
static void npc_next_pos_03(356,10468
static void npc_next_pos_04(362,10643
static void npc_next_pos_05(374,11047
static void npc_next_pos_06(392,11679
static void npc_next_pos_07(400,11996
static void npc_next_pos_08(406,12171
static void npc_next_pos_09(416,12412
static void npc_next_pos_0a(426,12653
static void npc_next_pos_0b(436,12894
static void npc_next_pos_0c(446,13135
static void npc_next_pos_0d(456,13383
static void npc_next_pos_0e(466,13631
static void npc_next_pos_0f(476,13879
void npc_next_pos(509,14779
uint32_t dungeon_has_npcs(517,14985

npc.h,1235
# define NPC_H2,14
# define NPC_SMART 8,72
# define NPC_TELEPATH 9,110
# define NPC_TUNNEL 10,148
# define NPC_ERRATIC 11,186
# define NPC_BIT04 12,224
# define NPC_BIT05 13,262
# define NPC_BIT06 14,300
# define NPC_BIT07 15,338
# define NPC_BIT08 16,376
# define NPC_BIT09 17,414
# define NPC_BIT10 18,452
# define NPC_BIT11 19,490
# define NPC_BIT12 20,528
# define NPC_BIT13 21,566
# define NPC_BIT14 22,604
# define NPC_BIT15 23,642
# define NPC_BIT16 24,680
# define NPC_BIT17 25,718
# define NPC_BIT18 26,756
# define NPC_BIT19 27,794
# define NPC_BIT20 28,832
# define NPC_BIT21 29,870
# define NPC_BIT22 30,908
# define NPC_BIT23 31,946
# define NPC_BIT24 32,984
# define NPC_BIT25 33,1022
# define NPC_BIT26 34,1060
# define NPC_BIT27 35,1098
# define NPC_BIT28 36,1136
# define NPC_BIT29 37,1174
# define NPC_BIT30 38,1212
# define NPC_BIT31 39,1250
# define has_characteristic(41,1289
typedef struct dungeon dungeon_t;44,1399
typedef struct character character_t;45,1433
typedef uint32_t npc_characteristics_t;46,1471
typedef struct npc 48,1512
  npc_characteristics_t characteristics;49,1533
  uint32_t have_seen_pc;50,1574
  pair_t pc_last_known_position;51,1599
} npc_t;53,1633

path.c,263
static dungeon_t *dungeon;dungeon12,633
typedef struct path 14,661
  heap_node_t *hn;hn15,683
  uint8_t pos[pos16,702
} path_t;17,720
static int32_t dist_cmp(19,731
static int32_t tunnel_cmp(26,1085
void dijkstra(33,1433
void dijkstra_tunnel(141,5818

path.h,60
# define PATH_H2,15
typedef struct dungeon dungeon_t;4,32

pc.c,127
void pc_delete(11,135
uint32_t pc_is_alive(18,195
void place_pc(23,257
void config_pc(33,684
uint32_t pc_next_pos(53,1065

pc.h,99
# define PC_H2,13
typedef struct dungeon dungeon_t;8,70
typedef struct pc 10,105
} pc_t;11,125

rlg327.c,115
const char *victory victory12,173
const char *tombstone tombstone43,1744
void usage(66,2797
int main(76,2990

utils.c,25
int makedirectory(9,124

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
